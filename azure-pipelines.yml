trigger:
  branches:
    include: ['master']
  tags:
    include: ['*']

pr:
- master

jobs:
- job: Build
  timeoutInMinutes: 360

  pool:
    vmImage: 'Ubuntu 16.04'

  variables:
    shell: /bin/bash

  steps:
  - checkout: self
    fetchDepth: 50

  - script: |
      curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $RUSTUP_TOOLCHAIN
      echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
      rustup toolchain install stable
      rustup component add rustfmt --toolchain stable
    displayName: Install rust

  - script: |
      sudo apt-get install -y --no-install-recommends autoconf2.13
    displayName: Install build-deps

  - script: |
      cargo +stable fmt --all -- --check
    displayName: Rustfmt check

  - bash: |
      cargo build --release
    displayName: Cargo build release

  - bash: |
      cargo build
    displayName: Cargo build debug

  - script: |
      cargo test --all
    displayName: Cargo test

  - bash: |
      MY_TAG="$(Build.SourceBranch)"
      MY_TAG=${MY_TAG#refs/tags/}
      echo $MY_TAG
      echo "##vso[task.setvariable variable=build.my_tag]$MY_TAG"
    displayName: Create tag variable

  - bash: |
      DATE="$(date +%Y-%m-%d)"
      echo "##vso[task.setvariable variable=build.date]$DATE"
    displayName: Create date variable

  - task: CopyFiles@2
    displayName: Copy assets
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)/target/$(TARGET)/release'
      contents: |
        wasm-sandbox
      targetFolder: '$(Build.BinariesDirectory)/sp-wasm'

  - task: ArchiveFiles@2
    displayName: Gather assets
    inputs:
      rootFolderOrFile: '$(Build.BinariesDirectory)/sp-wasm'
      archiveType: 'tar'
      tarCompression: 'gz'
      archiveFile: '$(Build.ArtifactStagingDirectory)/sp-wasm-$(build.my_tag)-$(TARGET).tar.gz'

  - task: GithubRelease@0
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
    inputs:
      gitHubConnection: golemfactory
      repositoryName: golemfactory/sp-wasm
      action: 'edit'
      target: '$(build.sourceVersion)'
      tagSource: 'manual'
      tag: '$(build.my_tag)'
      assets: '$(Build.ArtifactStagingDirectory)/sp-wasm-$(build.my_tag)-$(TARGET).tar.gz'
      title: '$(build.my_tag) - $(build.date)'
      assetUploadMode: 'replace'
      addChangeLog: false
